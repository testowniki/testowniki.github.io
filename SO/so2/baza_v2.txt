X10
W hierarchicznym systemie plikow wystepuje wiele katalogow
TAK
NIE

X01
W hierarchicznym systemie plikow wystepuje wiele katalogow glownych
TAK
NIE

X01
W hierarchicznym systemie plikow uzytkownikom przypisane sa priorytety dostepu do plikow
TAK
NIE

X01
W hierarchicznym systemie plikow uzytkownicy maja dostep tylko do swoich plikow
TAK
NIE

X10
W hierarchicznym systemie plikow okresla sie sciezki dostepu do plikow
TAK
NIE

X10
W hierarchicznym systemie plikow wystepuje jeden katalog glowny
TAK
NIE

X10
W hierarchicznym systemie plikow okreslona jest dokladnie jedna sciezka bezwzgledna do pliku
TAK
NIE

X10
W hierarchicznym systemie plikow wystepuja sciezki wzgledne i bezwzgledne dostepu do plikow
TAK
NIE

X10
W hierarchicznym systemie plikow moga wystepowac wielokrotne dowiazania twarde do pliku
TAK
NIE

X01
Bloki alokacji (klastry) w systemie plikow dobierane sa tak, aby zminimalizowac fragmentacje zewnetrzna
TAK
NIE

X10
Bloki alokacji (klastry) w systemie plikow dobierane sa tak, aby zminimalizowac fragmentacje wewnetrzna
TAK
NIE

X10
Bloki alokacji (klastry) w systemie plikow sa stalej wielkosci w calym systemie plikow
TAK
NIE

X01
Bloki alokacji (klastry) w systemie plikow sa zawsze wielkosci dwoch rekordow fizycznych (sektorow) na dysku
TAK
NIE

X01
Bloki alokacji (klastry) w systemie plikow powinny byc jak najwieksze, aby bylo ich w systemie niewiele
TAK
NIE

X10
Bloki alokacji (klastry) w systemie plikow numerowane sa liczbami binarnymi stalej dlugosci, co ogranicza ich liczbe
TAK
NIE

X10
Sekwencyjny dostep do pliku polega na czytaniu lub zapisie pliku rekord po rekordzie w stalej kolejnosci
TAK
NIE

X01
Sekwencyjny dostep do pliku pozwala na wystepowanie plikow nieciaglych, z niezaalokowanymi dziurami
TAK
NIE

X01
Sekwencyjny dostep do pliku jest mozliwy tylko w plikach z rekordami stalej dlugosci
TAK
NIE

X01
Sekwencyjny dostep do pliku nie pozwala dopisywac rekordow na koniec istniejacego pliku
TAK
NIE

X01
Sekwencyjny dostep do pliku nie powinien byz uzywany - jest implementowany jedynie z przyczyn historycznych
TAK
NIE

X01
Sekwencyjny dostep do pliku pozwala czytac rekordy w dowolnej kolejnosci dzieki operacji lseek
TAK
NIE

X10
Sekwencyjny dostep do pliku wyklucza powstawanie “dziur” w plikach, w ktorych nie ma przydzielonych blokow
TAK
NIE

X10
Sekwencyjny dostep do pliku ulatwia grupowanie operacji dyskowych przez system operacyjny
TAK
NIE

X01
Sekwencyjny dostep do pliku powinien byc uzywany jedynie przy operacjach na plikach specjalnych, odpowiadajacych urzadzeniom znakowym
TAK
NIE

X01
Sekwencyjny dostep do pliku szereguje dostep wielu procesow do pliku
TAK
NIE

X01
Bezposredni==swobodny dostep do pliku wymaga zmiany kolejnosci rekordow w pliku w celu optymalizacji czas dostepu
TAK
NIE

X10
Bezposredni==swobodny dostep do pliku pozwala na wystepowanie plikow nieciaglych, wewnatrz ktorych moga wystapic niezaalokowane obszary
TAK
NIE

X10
Bezposredni==swobodny dostep do pliku jest mozliwy tylko w plikach z rekordami stalej dlugosci
TAK
NIE

X10
Bezposredni==swobodny dostep do pliku pozwala na wystepowanie plikow nieciaglych, z niezaalokowanymi dziurami
TAK
NIE

X10
Bezposredni==swobodny dostep do pliku pozwala czytac rekordy w dowolnej kolejnosci dzieki operacji lseek
TAK
NIE

X01
Bezposredni==swobodny dostep do pliku pozwala na zapis fragmentow roznych plikow do wspolnego bloku alokacji
TAK
NIE

X01
Bezposredni==swobodny dostep do pliku szereguje dostep wielu procesow do pliku
TAK
NIE

X01
Bezposredni==swobodny dostep do pliku blokuje rownoczesny dostep wielu procesow do pliku
TAK
NIE

X01
W unixie wystepuje katalog, dostepny przez sciezke ../ jest to katalog roboczy procesu
TAK
NIE

X10
W unixie wystepuje katalog, dostepny przez sciezke ../ jest to katalog nadrzedny
TAK
NIE

X01
W unixie wystepuje katalog, dostepny przez sciezke ../ jest to katalog glowny, jeden dla calego systemu
TAK
NIE

X10
W unixie wystepuje katalog, dostepny przez sciezke ../ kazdy proces moze miec swoj taki katalog
TAK
NIE

X01
W unixie wystepuje katalog, dostepny przez sciezke ../ proces musi miec prawa zapisu w tym katalogu, aby mogl sie wykonywac
TAK
NIE

X01
Przydzial ciagly miejsca na dysku jest algorytmem optymalnym, nie dajacym sie zaimplementowac w praktyce
TAK
NIE

X10
Przydzial ciagly miejsca na dysku charakteryzuje sie fragmentacja zewnetrzna przestrzeni dysku
TAK
NIE

X01
Przydzial ciagly miejsca na dysku wymaga zapisu tablicy indeksowej na dysku
TAK
NIE

X01
Przydzial indeksowy miejsca na dysku jest algorytmem optymalnym, nie dajacym sie zaimplementowac w praktyce
TAK
NIE

X01
Przydzial indeksowy miejsca na dysku charakteryzuje sie fragmentacja zewnetrzna przestrzeni dysku
TAK
NIE

X10
Przydzial indeksowy miejsca na dysku wymaga zapisu tablicy indeksowej na dysku
TAK
NIE

X01
Przydzial listowy miejsca na dysku jest algorytmem optymalnym, nie dajacym sie zaimplementowac w praktyce
TAK
NIE

X01
Przydzial listowy miejsca na dysku charakteryzuje sie brakiem fragmentacja wewnetrznej przestrzeni dysku
TAK
NIE

X01
Przydzial listowy miejsca na dysku wymaga zapisu tablicy listowej na dysku
TAK
NIE

X01
Planowanie krotkoterminowe wymaga architektury wieloproces orowej
TAK
NIE

X01
Planowanie krotkoterminowe bezposrednio decyduje o wyborze procesow, ktore nalezy wczytac do pamieci
TAK
NIE

X01
Planowanie krotkoterminowe okresla procesy, ktore nalezy zablokowac
TAK
NIE

X01
Planowanie srednioterminowe wymaga architektury wieloprocesorowej
TAK
NIE

X10
Planowanie srednioterminowe bezposrednio decyduje o wyborze procesow, ktore nalezy wczytac do pamieci
TAK
NIE

X10
Planowanie srednioterminowe okresla procesy, ktore nalezy zablokowac
TAK
NIE

X10
Planowanie srednioterminowe polega na wyborze procesu, ktory ma zostac usuniety z pamieci op
TAK
NIE

X10
Planowanie srednioterminowe to wybor zadania, ktore w pierwszej kolejnosci powinno zostac wczytane do pamieci op
TAK
NIE

X01
Planowanie srednioterminowe musi byc zaimplementowane w kazdym wieloprogramowym sO
TAK
NIE

X01
Planowanie dlugoterminowe wymaga architektury wieloprocesorowej
TAK
NIE

X10
Planowanie dlugoterminowe bezposrednio decyduje o wyborze procesow, ktore nalezy wczytac do pamieci
TAK
NIE

X10
Planowanie dlugoterminowe okresla procesy, ktore nalezy utworzyc
TAK
NIE

X01
“Spooling” to technika przydzielania dodatkowych buforow procesom uprzywilejowanym
TAK
NIE

X10
“Spooling” to technika kopiowania w tle danych z nosnika papierowego na szybszy magnetyczny
TAK
NIE

X01
“Spooling” to technika programowania, zmniejszjaca pamiec wymagana do wykonania programu
TAK
NIE

X01
“Spooling” eliminuje fragmentacje zewnetrzna dyskow przez przesuwanie plikow w trakcie normalnej pracy komputera (w tle)
TAK
NIE

X01
“Spooling” eliminuje fragmentacje zewnetrzna dyskow przez przesuwanie plikow, przy czym uruchamiany jest przy
TAK
NIE

X01
“Spooling” wylaczonych wszystkich innych procesach
TAK
NIE

X01
“Spooling” to metoda buforowania dysku bazujaca na tworzeniu duzych puli buforow systemowych
TAK
NIE

X01
“Spooling” to metoda buforowania dysku w szybkich pamieciach wbudowanych do sterownika
TAK
NIE

X10
“Spooling” polega na zapisie danych wyjsciowych z programu na szybkie nosniki magnetyczne i drukowaniu ich w tle po zakonczeniu programu
TAK
NIE

X10
W unixie wystepuje katalog, dostepny przez sciezke ./ jest to katalog roboczy procesu
TAK
NIE

X01
W unixie wystepuje katalog, dostepny przez sciezke ./ jest to katalog nadrzedny
TAK
NIE

X01
W unixie wystepuje katalog, dostepny przez sciezke ./ jest to katalog glowny, jeden dla calego systemu
TAK
NIE

X10
W unixie wystepuje katalog, dostepny przez sciezke ./ kazdy proces moze miec swoj taki katalog
TAK
NIE

X01
W unixie wystepuje katalog, dostepny przez sciezke ./ proces musi miec prawa zapisu w tym katalogu, aby mogl sie wykonywac
TAK
NIE

X10
Katalog glowny systemu plikow w unixie jest plikiem zawierajacym rekordy z nazwami i numerami inodeíow nalezacych do niego plikow
TAK
NIE

X01
Katalog glowny systemu plikow w unixie jest plikiem zawierajacym rekordy z nazwami, innymi atrybutami i tablicami indeksowymi nalezacych do niego plikow
TAK
NIE

X01
Katalog glowny systemu plikow w unixie nie ma nazwy, definiowany jest przez zapisanie numeru jego inodeíu w superbloku
TAK
NIE

X01
Katalog glowny systemu plikow w unixie nie ma nazwy, zajmuje zawsze to samo miejsce na partycji dysku (w systemie plikow)
TAK
NIE

X01
Katalog glowny systemu plikow w unixie ma ograniczona wielkosc, poniewaz umieszczony jest w calosci w superbloku
TAK
NIE

X01
Katalog glowny systemu plikow w unixie nie zawiera pozycji .. (normalnie wskazujacej na katalog nadrzedny)
TAK
NIE

X01
Katalog glowny systemu plikow w unixie nie zawiera pozycji . i .. (normalnie wskazujacych na katalog biezacy i nadrzedny)
TAK
NIE

X01
Katalog glowny systemu plikow w unixie zawiera stala liczbe pozycji, ktorej nie mozna zmienic bez rekompilacji jadra systemu
TAK
NIE

X01
Katalog glowny systemu plikow w unixie musi miec taka sama zawartosc, jak katalog do ktorego jest montowany
TAK
NIE

X10
Katalog biezacy w unixie jest plikiem zawierajacym rekordy z nazwami i numerami inodeíow nalezacych do niego plikow
TAK
NIE

X01
Katalog biezacy w unixie ma ograniczona wielkosc, poniewaz umieszczony jest w calosci w superbloku
TAK
NIE

X01
Katalog biezacy w unixie nie zawiera pozycji . i ..
TAK
NIE

X01
Katalog biezacy w unixie uzytkwnik nie moze zmienic go, jezeli nie ma uprawnien root
TAK
NIE

X10
Powloka systemu operacyjnego okresla dostepny zestaw i skladnie komend sterujacych
TAK
NIE

X01
Powloka systemu operacyjnego okresla dostepny zestaw i skladnie komend zewnetrznych
TAK
NIE

X10
Powloka systemu operacyjnego okresla dostepny zestaw i skladnie komend wewnetrznych
TAK
NIE

X10
Powloka systemu operacyjnego okresla zmienne srodowiskowe dla uruchamianych komend
TAK
NIE

X10
Powloka systemu operacyjnego okresla jezyk programowania skryptow systemowych
TAK
NIE

X10
Powloka systemu operacyjnego pozwala na edytowanie linii komendy
TAK
NIE

X10
Powloka systemu operacyjnego pozwala na przegladanie historii wykonywanych komend
TAK
NIE

X01
Listy kontroli dostepu ACL w windows NT sluza do okreslania warunkow logowania uzytkownikow do systemu
TAK
NIE

X10
Listy kontroli dostepu ACL w windows NT sluza do okreslania warunkow dostepu do plikow dla roznych uzytkownikow
TAK
NIE

X10
Listy kontroli dostepu ACL w windows NT pozwalaja definiowac grupy uzytkownikow
TAK
NIE

X01
Listy kontroli dostepu ACL w windows NT pozwalaja definiowac klucze dostepu do zasobow
TAK
NIE

X10
Listy kontroli dostepu ACL w windows NT umozliwiaja zdefiniowanie obiektow, do ktorych dostep musi byc odnotowany
TAK
NIE

X01
Plik MFT (Master file table) w systemie plikow NTFS sluzy do okreslania uprawnien dostepu do plikow
TAK
NIE

X01
Plik MFT (Master file table) w systemie plikow NTFS sluzy do okreslania warunkow logowania uzytkownikow do sytemu
TAK
NIE

X10
Plik MFT (Master file table) w systemie plikow NTFS zawiera listy ACL wszystkich plikow
TAK
NIE

X01
Plik MFT (Master file table) w systemie plikow NTFS zawiera kopie boot sektora
TAK
NIE

X10
Plik MFT (Master file table) w systemie plikow NTFS zawiera opis wszystkich plikow w systemie
TAK
NIE

X01
Plik MFT (Master file table) w systemie plikow NTFS zawiera tablice partycji dysku
TAK
NIE

X01
Tablica FAT w systemie MS-DOS zawiera osobna pozycje dla kazdego rekordu fizycznego (sektora) w partycji dysku
TAK
NIE

X10
Tablica FAT w systemie MS-DOS zawiera informacje o defektach nosnika w pamieci dyskowej
TAK
NIE

X01
Tablica FAT w systemie MS-DOS pozwala przydzielac rekordy rezerwowe w miejsce uszkodzonych
TAK
NIE

X10
Tablica FAT w systemie MS-DOS zastepuje mape zajetosci dysku
TAK
NIE

X01
Semafory binarne sluza do wyznaczania czasu w systemach czasu rzeczywistego
TAK
NIE

X10
Semafory binarne sluza do synchronizacji procesow wspolbieznych
TAK
NIE

X01
Semafory binarne sluza do blokowania dostepu do dysku w trybie binarnym (nie znakowym)
TAK
NIE

X01
Semafory binarne sa to struktury danych do modelowania ruchu ulicznego
TAK
NIE

X10
Semafory binarne sa to dane jednobitowe, ktore mozna testowac, ustawiac i zerowac
TAK
NIE

X01
Semafory binarne sa to dane calkowitoliczbowe z zakresu 0 - 2n (n>1) z niepodzielnymi operacjami p i V
TAK
NIE

X10
Semafory binarne mozna uzywac do rozwiazywania dowolnych problemow synchronizacji procesow
TAK
NIE

X10
W semaforach dijkstry operacja czekaj na tych semaforach zawsze usypia procesy
TAK
NIE

X01
W semaforach dijkstry operacja sygnalizuj na tych semaforach moze usypiac procesy
TAK
NIE

X01
Semafory dijkstry sa mechanizmem ograniczajacym dostep do plikow
TAK
NIE

X10
Semafory dijkstry sluza do synchronizacji procesow
TAK
NIE

X10
Semafory dijkstry sluza do synchronizacji procesow wspolbieznych
TAK
NIE

X01
Semafory dijkstry to struktury danych do modelowania ruchu ulicznego
TAK
NIE

X10
Semafory dijkstry sa mechanizmem synchronizujacym dostep do plikow
TAK
NIE

X10
Semafory dijkstry sa to dane calkowitoliczbowe, na ktorych zdefiniowane sa operacje p i V
TAK
NIE

X01
Semafory dijkstry sa to flagi dwustanowe, na ktorych zdefiniowane sa nieprzerywalne operacje p i V
TAK
NIE

X10
Semafory dijkstry mozna uzywac do rozwiazywania dowolnych problemow synchronizacji procesow
TAK
NIE

X01
Semafory dijkstry w ich implementacji stosuje sie petle goracego czekania
TAK
NIE

X01
Kontekst procesu okresla wszystkie zasoby, z ktorych moze proces korzystac
TAK
NIE

X01
Kontekst procesu okresla wszystkie procesy, z ktorymi moze sie komunikowac
TAK
NIE

X10
Kontekst procesu okresla zawartosc rejestrow, z ktorych proces moze korzystac
TAK
NIE

X10
Kontekst procesu obejmuje informacje konieczne do wznowienia procesu zablokowanego
TAK
NIE

X01
Kontekst procesu obejmuje informacje konieczne do ustalenia procesu nadrzednego
TAK
NIE

X01
Kontekst procesu jest to obraz pamieci procesu w pewnej chwili
TAK
NIE

X01
Kontekst procesu jest to miedzy innymi obraz pamieci procesu w chwili wstrzymania
TAK
NIE

X10
Kontekst procesu obejmuje informacje konieczne do wznowienia procesu wstrzymanego
TAK
NIE

X01
Kontekst procesu jest to obraz plikow otwartych przez proces w pewnej chwili
TAK
NIE

X01
Kontekst procesu jest to obraz pamieci, rejestrow i zmiennych systemowych procesu w pewnej chwili
TAK
NIE

X01
Kontekst procesu jest skladowany gdy proces sie konczy (wykonuje exit)
TAK
NIE

X01
Kontekst procesu jest odtwarzany przy kazdym przelaczeniu procesow
TAK
NIE

X01
Kontekst procesu opisuje zaleznosc pomiedzy wspolbieznymi procesami
TAK
NIE

X10
Procesy charakteryzuja sie sekwencyjnym wykonywaniem operacji
TAK
NIE

X01
Procesy charakteryzuja sie kontekstem, ktory okresla jakie procesy sa wykonywane wspolbieznie
TAK
NIE

X10
Procesy charakteryzuja sie zlozonoscia obliczeniowa, wyrazona np. przez liczbe petli, skokow i rozgalezien (Nie wiadomo do konca)
TAK
NIE

X10
Procesy charakteryzuja sie mozliwoscia przerywania i wznawiania wykonania (wedlug skladowanego kontekstu)
TAK
NIE

X01
Proces moze przejsc do stanu gotowosci po wyczerpaniu kwantu czasu aktywnosci (w systemie z algorytmem karuzelowym)
TAK
NIE

X01
Proces moze przejsc do stanu gotowosci w wyniku wykonania funkcji exit (w unixie)
TAK
NIE

X10
Proces moze przejsc do stanu gotowosci bezposrednio ze stanu zablokowania
TAK
NIE

X10
Proces moze przejsc do stanu zablokowania (uspienia) po wyczerpaniu kwantu czasu aktywnosci (w systemie z algorytmem karuzelowym)
TAK
NIE

X01
Proces moze przejsc do stanu zablokowania (uspienia) w wyniku wykonania funkcji exit (w unixie)
TAK
NIE

X01
Proces moze przejsc do stanu zablokowania (uspienia) bezposrednio ze stanu gotowosci
TAK
NIE

X10
Ochrona pamieci w systemach operacyjnych ogranicza dostep procesow do pamieci systemu operacyjnego
TAK
NIE

X10
Ochrona pamieci w systemach operacyjnych ogranicza dostep procesow do pamieci im nie przydzielonej
TAK
NIE

X10
Ochrona pamieci w systemach operacyjnych zapewnia, ze inne procesy nie maja dostepu do pamieci procesu
TAK
NIE

X10
Ochrona pamieci w systemach operacyjnych zapewnia, ze procesy uzytkowe nie moga zmodyfikowac obrazu pamieci systemu oper.
TAK
NIE

X10
Ochrona pamieci w systemach operacyjnych bazuje na przeksztalcaniu adresow logicznych na fizyczne, kontrolowanym przez sO
TAK
NIE

X01
Ochrona pamieci w systemach operacyjnych bazuje na szyfrowaniu zawartosci pamieci
TAK
NIE

X01
Ochrona pamieci w systemach operacyjnych okresla prawa dostepu procesow do plikow roznych wlascicieli
TAK
NIE

X01
Ochrona pamieci w systemach operacyjnych okresla prawa dostepu procesow do folderow poczty elektronicznej
TAK
NIE

X10
Stronnicowanie na zadanie to podstawowa technika zwiekszania pamieci widzianej przez programy
TAK
NIE

X01
Stronnicowanie na zadanie to podstawowa technika przyspieszenia dostepu do pamieci
TAK
NIE

X01
Stronnicowanie na zadanie polega na skladowaniu na dysk calego obrazu pamieci zablokowanego procesu
TAK
NIE

X01
Stronnicowanie na zadanie polega na buforowaniu stron pamieci w pamieci podrecznej cache
TAK
NIE

X10
Stronnicowanie na zadanie wymaga dodatkowych pol w tablicy stron (np. flagi waznosci)
TAK
NIE

X10
Stronnicowanie na zadanie wymaga utrzymywania w pamieci tablicy stron
TAK
NIE

X10
Stronnicowanie pamieci polega na przydziale do programu ramek pamieci o stalej wielkosci
TAK
NIE

X01
Stronnicowanie pamieci polega na przydziale do programu segmentow pamieci dowolnej wielkosci
TAK
NIE

X01
Stronnicowanie pamieci wymaga tworzenia obrazu pamieci w obszarze wymiany na dysku
TAK
NIE

X01
Stronnicowanie pamieci pozwala implementowac liniowy model adresow fizycznych w programie
TAK
NIE

X10
Stronnicowanie pamieci pozwala implementowac liniowy model adresow logicznych w programie
TAK
NIE

X01
Pamiec stronnicowania charakteryzuje sie tym, ze adresy logiczne sa tworzone jako suma adresu bazowego i przesuniecia
TAK
NIE

X10
Pamiec stronnicowania charakteryzuje sie tym, ze adresy fizyczne sa sklejeniem pary liczb okreslajacych numer ramki stalej dlugosci oraz przesuniecia (offset) w obrebie ramki
TAK
NIE

X10
Pamiec stronnicowania charakteryzuje sie tym, ze adres logiczny jest zlozeniem numeru strony i przesuniecia wzgledem jej poczatku
TAK
NIE

X10
Pamiec stronnicowania charakteryzuje sie tym, ze jezeli strona nie ma przydzielonej ramki fizycznej, to wystepuje ablad stronyE; brak przydzialu jest
TAK
NIE

X01
Pamiec stronnicowania charakteryzuje sie tym, ze oznaczony w tablicy stron flaga poprawnosci (valid)
TAK
NIE

X01
Pamiec stronnicowania charakteryzuje sie tym, ze jezeli strona nie ma przydzielonej ramki fizycznej, to wystepuje ablad stronyE; brak przydzialu jest oznaczony w tablicy stron bitem ochrony (access control)
TAK
NIE

X01
Pamiec stronnicowania charakteryzuje sie tym, ze jezeli strona nie ma przydzielonej ramki fizycznej, to wystepuje ablad stronyE; brak przydzialu jest oznaczony w tablicy stron bitem modyfikacji (modified flag)
TAK
NIE

X01
Pamiec stronnicowania charakteryzuje sie tym, ze jest technika pozwalajaca przydzielac programom wiecej pamieci, niz jest fizycznie zainstalowane w systemie
TAK
NIE

X10
Pamiec stronnicowania charakteryzuje sie tym, ze jest technika pozwalajaca przydzielac programom pamiec blokami stalej wielkosci (stronami)
TAK
NIE

X10
Pamiec stronnicowania charakteryzuje sie tym, ze adres logiczny jest przeksztalcany na adres fizyczny przez odczytanie numeru ramki z tablicy stron, z pozycji odpowiadajacej numerowi strony
TAK
NIE

X01
Pamiec stronnicowania charakteryzuje sie tym, ze jest technika pozwalajaca przydzielac programom pamiec blokami zmiennej wielkosci
TAK
NIE

X10
Pamiec stronnicowania charakteryzuje sie tym, ze Eliminuje fragmentacje zewnetrzna pamieci
TAK
NIE

X01
Pamiec stronnicowania charakteryzuje sie tym, ze Eliminuje fragmentacje wewnetrzna pamieci
TAK
NIE

X01
Pamiec stronnicowania charakteryzuje sie tym, ze musi byc realizowa z wykorzystaniem pamieci asocjacyjnej na tablice stron
TAK
NIE

X10
Pamiec stronnicowania charakteryzuje sie tym, ze powoduje, ze programy maja nieliniowa przestrzen adresowa (fizyczna tak, logiczna nie)
TAK
NIE

X01
Pamiec stronnicowania charakteryzuje sie tym, ze wymaga implementacji tablicy segmentow (sprzetowo lub programowo)
TAK
NIE

X01
Blokada systemu wystepuje, gdy dwa procesy probuja rownoczesnie pisac do tego samego pliku
TAK
NIE

X01
Blokada systemu wystepuje, gdy dwa procesy probuja rownoczesnie pisac do tego gniazda sieciowego
TAK
NIE

X01
Blokada systemu wystepuje tylko w systemach operacyjnych napisanych z bledami
TAK
NIE

X10
Blokada systemu wystepuje tylko w systemach operacyjnych wieloprogramowych
TAK
NIE

X10
Blokade systemu mozna usunac przez wymuszenie zakonczenia wszystkich procesow uspionych
TAK
NIE

X01
Blokade systemu mozna usunac przez czasowe zablokowanie dostepu uzytkownikow do systemu
TAK
NIE

X10
Warunki konieczne do wystapienia blokady to wystepowanie zasobow, ktore nie moga byc rownoczesnie wykorzystywane przezwiele procesow
TAK
NIE

X01
Warunki konieczne do wystapienia blokady to brak priorytetow w dostepie do zasobow
TAK
NIE

X01
Warunki konieczne do wystapienia blokady to przelaczanie procesow wedlug algorytmu planowania z wywlaszczaniem
TAK
NIE

X10
Warunki konieczne do wystapienia blokady to przelaczanie procesow wedlug algorytmu bez wywlaszczania
TAK
NIE

X10
Warunki konieczne do wystapienia blokady to przetrzymywanie i oczekiwanie, tzn. pozwolenie procesom nie bedacym aktywnymi ani gotowymi na zachowanie przydzialu zasobu
TAK
NIE

X10
Warunki konieczne do wystapienia blokady to brak mechanizmu, ktory umozliwialby proceson przyjecie zasobow przydzielonych innym
TAK
NIE

X10
Warunki konieczne do wystapienia blokady to wystepowanie zasobow, ktore nie moga byc wspoldzielone
TAK
NIE

X10
Warunki konieczne do wystapienia blokady to brak mechanizmu umozliwiajacego wywlaszczanie zasobow od procesow
TAK
NIE

X01
Warunki konieczne do wystapienia blokady to okreslaja, jak pisac programy wielowatkowe aby unikac bloakd
TAK
NIE

X01
Warunki konieczne do wystapienia blokady to okreslaja, jak pisac programy wieolprocesowe aby unikac bloakd
TAK
NIE

X01
Warunki konieczne do wystapienia blokady to okreslaja, kiedy proces moze przejsc do stanu zablokowania
TAK
NIE

X10
Warunki konieczne do wystapienia blokady to mozliwosc zawieszania procesow z przydzielonymi pewnymi zasobami
TAK
NIE

X10
Funkcja systemowa wait w unixie zawiesza wykonywanie procesu w oczekiwaniu na zakonczenie procesu potomnego
TAK
NIE

X01
Funkcja systemowa wait w unixie zawiesza wykonywanie procesu przez zadany argumentem czas
TAK
NIE

X01
Funkcja systemowa wait w unixie moze byc wykonywana tylko przez procesy daemony
TAK
NIE

X01
Funkcja systemowa wait w unixie moze byc wykonywana tylko przez proces z uprawnieniami root
TAK
NIE

X10
Funkcja systemowa wait w unixie umozliwia czekanie na zakonczenie operacji sieciowych
TAK
NIE

X10
Funkcja systemowa wait w unixie umozliwia czekanie na zakonczenie operacji we/wy
TAK
NIE

X10
Technika opoznionego zapisu na dysk w systemie unix jest metu sieciowym
TAK
NIE

X01
Technika opoznionego zapisu na dysk w systemie unix jest metoda synchronizacji zapisow na dysku
TAK
NIE

X10
Technika opoznionego zapisu na dysk w systemie unix polega na wprowadzeniu petli opozniajacej miedzy kolejnymi rozkazami zapisu
TAK
NIE

X01
Technika opoznionego zapisu na dysk w systemie unix polega na zapisie bufora na dysk, w chwili jego zwalniania
TAK
NIE

X01
Technika opoznionego zapisu na dysk w systemie unix moze byc wybiorczo stosowana przez programowe wlaczanie/wylaczanie funkcja fctl
TAK
NIE

X01
Technika opoznionego zapisu na dysk w systemie unix moze byc wylaczana komenda fctl
TAK
NIE

X01
Buforowanie operacji dyskowych w systemie unix jest ograniczone do urzadzen z niewymiennym nosnikiem (np. twardych dyskow); dostep do plikow na  dyskietkach nie moze byc buforowany
TAK
NIE

X10
Buforowanie operacji dyskowych w systemie unix redukuje czas dostepu do plikow oraz liczbe fizycznych operacji we/wy
TAK
NIE

X10
Buforowanie operacji dyskowych w systemie unix utrudnia rownoczesny dostep do rekordow pliku przez wiele procesow (recordlocking)
TAK
NIE

X01
Buforowanie operacji dyskowych w systemie unix wymaga od programisty uzywania operacji fflush aby miec pewnosc, ze zmiany w pliku zostana natychmiast zapisane na dysk
TAK
NIE

X10
Sygnaly w systemie unix wykorzystywane sa do synchronizacji procesow
TAK
NIE

X10
Sygnaly w systemie unix wykorzystywane sa m.in. do zabijania procesow
TAK
NIE

X10
Sygnaly w systemie unix moga byc adresowane do wszystkich procesow uzytkownika o znanym uID
TAK
NIE

X01
Sygnaly w systemie unix moga byc adresowane do wszystkich procesow uspionych w systemie
TAK
NIE

X10
Sygnaly w systemie unix mozna definiowac wlasne funkcje obslugi niektorych z nich
TAK
NIE

X01
Sygnaly w systemie unix proces mozna zaprogramowac tak, aby ignorowal wszystkie sygnaly przychodzace
TAK
NIE

X01
Sygnaly w systemie unix wysylane moga byc przez kazdy proces przy pomocy funkcji signal
TAK
NIE

X10
Sygnaly w systemie unix wysylane moga byc przez kazdy proces przy pomocy funkcji kill
TAK
NIE

Fragmentacja wewnetrzna dysku jest wynikiem niedopasowania rozmiaru plikow do wielkosci obszarow wolnych (powstajacych przy kasowaniu plikow)
TAK
NIE

X10
Fragmentacja wewnetrzna dysku jest wynikiem niedopasowania rozmiaru plikow do wielokrotnosci wielkosci blokow alokacji
TAK
NIE

X01
Fragmentacja wewnetrzna dysku jest wynikiem przydzialu miejsca na dysku porcjami zmiennej wielkosci
TAK
NIE

X01
Fragmentacja wewnetrzna dysku moze byc wyeliminowana przez program defragmentujacy
TAK
NIE

X10
Fragmentacja wewnetrzna dysku jest wynikiem pozostawania niewykorzystanych fragmentow w ostatnich blokach plikow
TAK
NIE

X10
Fragmentacja wewnetrzna dysku jest wynikiem przydzialu miejsca na dysku porcjami stalej wielkosci
TAK
NIE

X01
Fragmentacja wewnetrzna dysku jest wynikiem braku konserwacji systemu plikow - moze byc wyeliminowana przez program defragmentujacy
TAK
NIE

X01
Fragmentacja wewnetrzna dysku jest wynikiem braku konserwacji systemu plikow (brak defragmentacji)
TAK
NIE

X01
Fragmentacja wewnetrzna dysku jest wynikiem bledow programowych np. nie zamkniecia pliku przed zakonczeniem programu
TAK
NIE

X01
Fragmentacja wewnetrzna dysku powoduje lepsze wykorzystanie miejsca w pamieci przez procesy
TAK
NIE

X10
Fragmentacja wewnetrzna dysku jest wynikiem przydzialu pamieci porcjami stalej wielkosci (stronami)
TAK
NIE

X01
Fragmentacja wewnetrzna dysku wystepuje jedynie w systemach z pamiecia wirtualna
TAK
NIE

X01
Fragmentacja wewnetrzna dysku jest wynikiem niedopasowania rozmiaru segmentow pamieci do wielokrotnosci wielkosci ramki
TAK
NIE

X01
Fragmentacja wewnetrzna dysku moze byc wyeliminowana przez relokacje programow
TAK
NIE

X01
Fragmentacja wewnetrzna dysku jest wynikiem bledow programowych np. nie zwalniania pamieci przed zakonczeniem programu
TAK
NIE

X01
Fragmentacja zewnetrzna pamieci jest wynikiem niedopasowania rozmiaru segmentow pamieci do wielokrotnosci wielkosci ramki
TAK
NIE

X10
Fragmentacja zewnetrzna pamieci moze byc wyeliminowana przez relokacje programow
TAK
NIE

X01
Fragmentacja zewnetrzna pamieci jest wynikiem bledow programowych np. nie zwalniania pamieci przed zakonczeniem programu
TAK
NIE

X10
Algorytm przelaczania procesow w systemie unix jest algorytmem ze stalym priorytetem zewnetrznym, zadawanym komenda/funkcja nice
TAK
NIE

X01
Algorytm przelaczania procesow w systemie unix jest algorytmem bez wywlaszczen
TAK
NIE

X01
Algorytm przelaczania procesow w systemie unix jest algorytmem z wywlaszczeniem procesow systemowych i uzytkowych
TAK
NIE

X10
Algorytm przelaczania procesow w systemie unix jest algorytmem, w ktorym wywlaszczane sa tylko procesy uzytkownika
TAK
NIE

X10
Algorytm przelaczania procesow w systemie unix jest algortmem priorytetowym, w ktorym priorytet jest wewnetrznie zmieniany w trakcie wykonywania procesu
TAK
NIE

X10
Algorytm przelaczania procesow w systemie unix jest algorytmem z wywlaszczeniem
TAK
NIE

X01
Algorytm przelaczania procesow w systemie unix opiera sie na priorytecie statycznym, wyliczanym w opraciu o wykorzystanie procesora przez proces
TAK
NIE

X10
Algorytm przelaczania procesow w systemie unix opiera sie na priorytecie dynamicznym, obnizanym dla procesow intensywnych obliczeniowo, a podwyzszanym dla procesow interakcyjnych
TAK
NIE

X10
Algorytm przelaczania procesow w systemie unix pozwala modyfikowac priorytet procesu przy pomocy funkcji nice
TAK
NIE

X01
Algorytm karuzelowy przelaczania procesow jest algorytmem bez wywlaszczenia
TAK
NIE

X10
Algorytm karuzelowy przelaczania procesow jest algorytmem z wywlaszczeniem
TAK
NIE

X01
Algorytm karuzelowy przelaczania procesow przelacza procesy wedlug dynamicznie zmienianego priorytetu
TAK
NIE

X01
Algorytm karuzelowy przelaczania procesow jest najczesciej wykorzystywanym algorytmem w roznych wersjach systemu operacyjnego unix
TAK
NIE

X10
Algorytm karuzelowy przelaczania procesow polega na uruchamianiu procesow na staly kwant czasu i wymuszaniu przelaczenia kontekstu, jezeli proces nie zwolni procesora w tym czasie
TAK
NIE

X01
Algorytm karuzelowy przelaczania procesow jest algorytmem optymalnym, w praktyce niemozliwym do zrealizowania
TAK
NIE

X10
Algorytmy przelaczania procesow z wywlaszczeniem moga wykorzystywac priorytety stale lub zmieniajace sie dynamicznie
TAK
NIE

X01
Algorytmy przelaczania procesow z wywlaszczeniem zwiekszaja wspolczynnik wykorzystania procesora w systemach wielodostepnych
TAK
NIE

X10
Algorytmy przelaczania procesow z wywlaszczeniem polega na uruchamianiu procesow na staly kwant czasu i wymuszaniu przelaczenia kontekstu, jezeli proces nie zwolni procesora w tym czasie
TAK
NIE

X01
Algorytm fIFO zastepowania stron pamieci gwarantuje najmniejsza mozliwa liczbe bledow stron
TAK
NIE

X01
Algorytm fIFO zastepowania stron pamieci gwarantuje najkrotszy czas dostepu do pamieci
TAK
NIE

X01
Algorytm fIFO zastepowania stron pamieci zapewnia, ze liczba bledow stron (dla tych samych procesow) nie zwiekszy sie, gdy doinstalujemy (udostepnimy) dodatkowe ramki pamieci fizycznej
TAK
NIE

X10
Algorytm fIFO zastepowania stron pamieci polega na usuwaniu stron, ktore najdluzej przebywaly w pamieci fizycznej
TAK
NIE

X01
Algorytm fIFO zastepowania stron pamieci polega na usuwaniu stron, ktore najdawniej byly uzywane
TAK
NIE

X01
Algorytm lRU (najdawniej uzywana) zastepowania stron pamieci gwarantuje najmniejsza mozliwa liczbe bledow stron
TAK
NIE

X10
Algorytm lRU (najdawniej uzywana) zastepowania stron pamieci zapewnia, ze liczba bledow stron (dla tych samych procesow) nie zwiekszy sie, gdy doinstalujemy (udostepnimy) dodatkowe ramki pamieci fizycznej
TAK
NIE

X01
Algorytm lRU (najdawniej uzywana) zastepowania stron pamieci polega na usuwaniu stron, ktore najdluzej przebywaly w pamieci fizycznej
TAK
NIE

X01
Systemy wielodostepne wymagaja architektury wieloprocesorowej
TAK
NIE

X01
Systemy wielodostepne wymagaja architektury jednoprocesorowej
TAK
NIE

X10
Systemy wielodostepne pozwalaja na wykonywanie wielu zadan wspolbieznie
TAK
NIE

X10
Systemy wielodostepne pozwalaja na wspolbiezne przetwarzanie wielu procesow (jednego lub wielu uzytkownikow)
TAK
NIE

X10
Systemy wielodostepne zapewniaja dostep wszystkich uzytkownikow do identycznych danych
TAK
NIE

X10
Systemy wielodostepne pozwalaja na przesylanie sobie poczty w obrebie systemu
TAK
NIE

X01
Systemy wielodostepne wymuszaja prace wsadowa na komputerze
TAK
NIE

X01
Systemy wielodostepne wymagaja wielu terminali podlaczonych do jednego komputera
TAK
NIE

X10
Systemy wielodostepne dziela zadania na interakcyjne i wykonywane w tle
TAK
NIE

X01
Dynamiczne ladowanie programu polega na wykorzystaniu bibliotek dolaczanych w trakcie wykonywania programu
TAK
NIE

X10
Dynamiczne ladowanie programu polega na ladowaniu nakladek programu, gdy sa potrzebne
TAK
NIE

X10
Dynamiczne ladowanie programu mozna zrealizowac w systemie ze stronnicowaniem na zadanie
TAK
NIE

X10
Dynamiczne laczenie programu polega na wykorzystaniu bibliotek dolaczanych w trakcie wykonywania programu
TAK
NIE

X01
Dynamiczne laczenie programu polega na ladowaniu nakladek programu, gdy sa potrzebne
TAK
NIE

X10
Dynamiczne laczenie programu mozna zrealizowac w systemie bez stronnicowania na zadanie
TAK
NIE

X10
Kryteriami rozwiazanie problemu sekcji krytycznej jest wzajemne wylaczanie - procesy musza miec mozliwosc wzajemnego blokowania
TAK
NIE

X10
Kryteriami rozwiazanie problemu sekcji krytycznej jest postep - dostep do sekcji nie moze byc zablokowany, jezeli nie przebywa w niej inny
TAK
NIE

X10
Kryteriami rozwiazanie problemu sekcji krytycznej jesr ograniczone czekanie - kazdy proces musi kiedys dostac sie do sekcji
TAK
NIE

X01
Dolaczenia w systemie plikow (links) oznaczone sa symbolem / w sciezkach dostepu
TAK
NIE

X10
Dolaczenia w systemie plikow (links) pozwalaja tworzyc systemy plikow o strukturze niehierarchicznej
TAK
NIE

X01
Dolaczenia w systemie plikow (links) sa wynikiem bledow w programie i polegaja na polaczenie sie list alokacji odpowiadajacych roznym plikom w tablicy FAT
TAK
NIE

X01
Dolaczenia w systemie plikow (links) sa wynikiem bledow w programie i powstaja przy wielokrotnym otwieraniu tych samych plikow do zapisu
TAK
NIE

X10
Dolaczenia w systemie plikow (links) wiaza nazwy plikow z INODEíami w systemie unix
TAK
NIE

X01
Dolaczenia w systemie plikow (links) tworzone sa przy otwieraniu plikow, usuwane przy zamykaniu
TAK
NIE

X10
Dolaczenia w systemie plikow (links) moga byc symboliczne, gdy wskazuja sciezke dostepu do pliku wlasciwego, lub twarde, jezeli powstaja przez zdefiniowanie drugiej nazwy dla pliku
TAK
NIE

X10
Przetwarzanie potokowe w unixie realizowane jest przez przekierowanie standardowego wyjscia komendy pierwszej do standardowego wejscia komendy drugiej
TAK
NIE

Przetwarzanie potokowe w unixie w powloce sh mozna je wywolac wypisujac dwie komendy w nawiasach okraglych, rozdzielone przecinkami
TAK
NIE

X01
Przetwarzanie potokowe w unixie dostepne jest tylko w systemach wieloprocesorowych
TAK
NIE

X01
Proces uspiony (zablokowany) oczekuje na zwolnienie procesora przez proces aktywny
TAK
NIE

X10
Proces uspiony (zablokowany) realizuje operacje semaforowe
TAK
NIE

X01
Proces uspiony (zablokowany) zawsze usuwany jest z pamieci operacyjnej (kopiowany do obszaru wymiany)
TAK
NIE

X10
Stronicowanie na zadanie polega na wymianie stron w pamieci fizycznej, wczytywaniu stron, do ktorych wystepuja aktualnie odwolania
TAK
NIE

X10
Stronicowanie na zadanie umozliwia zapisywanie do obszaru wymiany na dysku fragmentow kontekstow procesow, gdy brakuje pamieci fizycznej
TAK
NIE

X10
Mechanizm spotkaniowy to technika synchronizacji dostepu do pamieci wspoldzielonej przez procesy
TAK
NIE

X10
Mechanizm spotkaniowy wykorzystywany jest do przesylania danych pomiedzy procesami
TAK
NIE

X01
Mechanizm spotkaniowy wykorzystywany jest do negocjacji dostepu do plikow
TAK
NIE

X01
Warunek postepu w synchronizacji miedzy procesami to zapewnienie, ze dwa procesu nie znajda sie w tym samym czasie w sekcji krytycznej
TAK
NIE

X10
Warunek postepu w synchronizacji miedzy procesami to wymaganie, aby synchronizacja nie powodowala nieograniczonego w czasie zawieszenia procesu
TAK
NIE

X01
Warunek postepu w synchronizacji miedzy procesami zapewnia, ze proces nie jest wywlaszczany, gdy znajduje sie w sekcji krytycznej
TAK
NIE

X01
Planowanie zadan ma na celu unikanie blokad
TAK
NIE

X01
Planowanie zadan ma na celu synchronizowanie dostepu do zasobow
TAK
NIE

X10
Planowanie zadan ma na celu wybor procesu do aktywacji
TAK
NIE

X01
Funkcja systemowa fork w unixie (Linuxie) tworzy nowy proces, realizujacy program podany w argumencie do tej funkcji
TAK
NIE

X01
Funkcja systemowa fork w unixie (Linuxie) tworzy nowy watek, realizujacy funkcje podana w argumencie
TAK
NIE

X10
Funkcja systemowa fork w unixie (Linuxie) tworzy nowy proces, realizujacy ten sam program co proces-rodzic
TAK
NIE

X01
Sygnaly w systemie unix generowane sa wylacznie przez sterowniki urzadzen zewnÍtrznych
TAK
NIE

X10
Sygnaly w systemie unix wysylane sa do pojedynczych procesow, grup procesow, procesow okreslonego uzytkownika lub do wszystkich procesow
TAK
NIE

X01
Sygnaly w systemie unix moga byc ignorowane przez procesy (z wyjatkiem sygnalu 9)
TAK
NIE

X10
Pozycje katalogowe zawieraja nazwy plikow
TAK
NIE

X10
Pozycje katalogowe zawieraja informacje o polozeniu pliku na dysku
TAK
NIE

X01
Pozycje katalogowe zawieraja sume kontrolna pliku
TAK
NIE

X01
Sciezka do pliku moze byc wzgledna, bezwzgledna lub symboliczna
TAK
NIE

X01
Sciezka do pliku jest sciezka wzgledna okreslajaca polozenie pliku wzgledem katalogu domowego uzytkownika
TAK
NIE

X10
Sciezka do pliku jest sciezka bezwzgledna okreslaca polozenie pliku wzgledem katalogu glownego
TAK
NIE

X01
Sekcja krytyczna to technika synchronizacji dostepu do pamieci wspoldzielonej przez procesy
TAK
NIE

X10
Sekcja krytyczna wykorzystywana jest do ochrony danych przed rownoczesna ich modyfikacja przez procesy wspolbiezne
TAK
NIE

X01
Sekcja krytyczna wykorzystywana jest do negocjacji dostepu do semaforow
TAK
NIE

X10
Wspolbieznosc w systemach operacyjnych realizowana jest przez przelaczanie procesow, tzn. wstrzymywanie procesow co pewien czas i pre innych
TAK
NIE

X01
Wspolbieznosc w systemach operacyjnych w powloce sh mozna ja wywolac wypisujac dwie komendy w nawiasach okraglych, rozdzielone przecinkami
TAK
NIE

X01
Wspolbieznosc w systemach operacyjnych dostepna jest tylko w systemach wieloprocesorowych
TAK
NIE

X10
Proces gotowy oczekuje na zwolnienie procesora przez proces aktywny
TAK
NIE

X01
Proces gotowy realizuje operacje drugoplanowe
TAK
NIE

X01
Proces gotowy czasami usuwany jest z pamieci operacyjnej (kopiowany do obszaru wymiany)
TAK
NIE

X01
Funkcja systemowa exec w unixie (Linuxie) tworzy nowy proces, realizujacy program podany w argumencie do tej funkcji
TAK
NIE

X01
Funkcja systemowa exec w unixie (Linuxie) tworzy nowy watek, realizujacy funkcje podana w argumencie
TAK
NIE

X10
Funkcja systemowa exec w unixie (Linuxie) modyfikuje kontekst wykonywanego procesu, korzystajac z pliku wykonywalnego podanego w argumencie
TAK
NIE

X10
Sygnaly w systemie unix generowane sa przez wykonanie operacji kill
TAK
NIE

X01
Sygnaly w systemie unix moga powodowac zakonczenie procesu
TAK
NIE

X10
Sygnaly w systemie unix moga byc wyslane do wielu procesow rownoczesnie
TAK
NIE

X10
Dowiazania symboliczne sa to pliki specjalne, ktore wskazuja na inne obiekty w systemie plikow
TAK
NIE

X10
Dowiazania symboliczne zawieraja informacje o polozeniu pliku na dysku
TAK
NIE

X01
Dowiazania symboliczne w unixie musza miec rozszerzenie .lnk
TAK
NIE

X01
Wzorce plikow sa mechanizmem definiowania dopuszczalnej zawartosci plikow
TAK
NIE

X10
Wzorce plikow pozwalaja definiowac sciezki wyszukiwania komend w systemach operacyjnych
TAK
NIE

X10
Wzorce plikow wykorzystuja znaki ? oraz * do okreslania dowolnych znakow w nazwie pliku
TAK
NIE

X01
Funkcja systemowa execve w unixie(Linuxie) tworzy nowy proces, realizujacy program podany w argumencie do tej funkcji
TAK
NIE

X01
Funkcja systemowa execve w unixie(Linuxie) tworzy nowy watek, realizujacy funkcje podana w argumencie
TAK
NIE

X01
Funkcja systemowa execve w unixie(Linuxie) tworzy nowy proces, realizujacy ten sam program co proces-rodzic
TAK
NIE

X10
Pozycje katalogowe w systemie unix zawieraja nazwy plikow
TAK
NIE

X10
Pozycje katalogowe w systemie unix zawieraja date modyfikacji pliku
TAK
NIE

X01
Pozycje katalogowe w systemie unix zawieraja rozszerzenie 3 - znakowe
TAK
NIE

X10
Stan procesu jest pamietany w tablicy procesow
TAK
NIE

X01
Stan procesu jest wyznaczany przy pierwszym uruchomieniu procesu i potem sie nie zmienia
TAK
NIE

X10
Stan procesu jezeli jest aktywny, to proces jest wykonywany przez procesor
TAK
NIE

X01
Sygnaly w systemie unix generowane sa wylacznie przez sterowniki urzadzen zewnetrznych
TAK
NIE

X10
Sygnaly w systemie unix wysylane sa do pojedynczych procesow lub do grup procesow
TAK
NIE

X10
Wiekszosc sygnalow w systemie unix  moze byc ignorowana przez procesy
TAK
NIE

X01
Kanal komunikacyjny z ograniczonym buforowaniem to technika synchronizacji dostepu do karty sieciowej przez procesy
TAK
NIE

X10
Kanal komunikacyjny z ograniczonym buforowaniem wykorzystywany jest do przesylania danych pomiedzy procesami
TAK
NIE

X10
Kanal komunikacyjny z ograniczonym buforowaniem moze spowodowac uspienie procesu piszacego do kanalu
TAK
NIE

X10
Warunek wykluczania w synchronizacji miedzy procesami to zapewnienie, ze dwa procesy nie znajda sie w tym samym czasie w sekcji krytycznej
TAK
NIE

X01
Warunek wykluczania w synchronizacji miedzy procesami to wymaganie, aby synchronizacja nie powodowala nieograniczonego w czasie zawieszenia procesu
TAK
NIE

X01
Warunek wykluczania w synchronizacji miedzy procesami zapewnia, ze proces nie jest wywlaszczany, gdy znajduje sie w sekcji krytycznej
TAK
NIE

X01
Funkcja systemowa signal w unixie (Linuxie) tworzy nowy proces
TAK
NIE

X01
Funkcja systemowa signal w unixie (Linuxie) wysyla komunikat do standardowego strumienia bledow
TAK
NIE

X01
Funkcja systemowa signal w unixie (Linuxie) wysyla sygnal do procesu lub grupy procesow
TAK
NIE

X10
Algorytm karuzelowy zapewnia wszystkim procesom ten sam priorytet
TAK
NIE

X01
Algorytm karuzelowy nie pozwala wywlaszczac procesow systemowych
TAK
NIE

X01
Algorytm karuzelowy jest algorytmem z priorytetami dynamicznymi
TAK
NIE

X01
Algorytm lRU zastepowania stron pamieci wirtualnej polega na usuwaniu najdluzej zaladowanych stron
TAK
NIE

X10
Algorytm lRU zastepowania stron pamieci wirtualnej zapewnia dobre dostosowanie do zestawu roboczego stron
TAK
NIE

X01
Algorytm lRU zastepowania stron pamieci wirtualnej zapewnia zawsze najmniejsza liczbe bledow stron (w porownaniu z innymi algorytmami)
TAK
NIE

X10
Biblioteki laczone dynamicznie (DLL) ladowane sa do pamieci tylko funkcje, do ktorych wystapi odwolanie
TAK
NIE

X01
Biblioteki laczone dynamicznie (DLL) udostepniaja wylacznie funkcje wielowejsciowe (reentrant)
TAK
NIE

X01
Biblioteki laczone dynamicznie (DLL) kopiowane sa w calosci do plikow wykonywalnych, zawierajacych programy z nich korzystajace
TAK
NIE

X01
Buforowanie operacji dyskowych Eliminuje fragmentacje wewnetrzna w systemie plikow
TAK
NIE

X10
Buforowanie operacji dyskowych umozliwia zapis danych do pliku porcjami roznej wielkosci
TAK
NIE

X01
Buforowanie operacji dyskowych umozliwia zrownoleglenie procesow
TAK
NIE

X01
Dowiazania symboliczne w linuxie zawieraja informacje o polozeniu pliku na dysku
TAK
NIE

X01
Dowiazania symboliczne w linuxie musza miec rozszerzenie .ink
TAK
NIE

X10
Dowiazania symboliczne w linuxie sa to pliki specjalne, ktore wskazuja przy pomocy sciezek na inne obiekty
TAK
NIE

X10
Dynamiczne laczenie programu zmniejsza wielkosc pliku wykonywalnego (exe)
TAK
NIE

X01
Dynamiczne laczenie programu wykorzystuje biblioteki statyczne
TAK
NIE

X01
Dynamiczne laczenie programu polega na tworzeniu polaczen dynamicznych pomiedzy procesami
TAK
NIE

X10
Dynamiczne ladowanie programu polega na ladowaniu nakladek programu, gdy sa potrzebne
TAK
NIE

X01
Dynamiczne ladowanie programu polega na wykorzystaniu bibliotek dolaczanych w trakcie wykonywania programu
TAK
NIE

X01
Dynamiczne ladowanie programu zmniejsza czas od wydania komendy do uruchomienia programu
TAK
NIE

X01
Funkcja systemowa signal tworzy nowy proces
TAK
NIE

X01
Funkcja systemowa signal wysyla sygnal do procesu lub grupy procesow
TAK
NIE

X10
Funkcja systemowa signal wysyla komunikat do standardowego strumienia bledow
TAK
NIE

X10
Funkcja systemowa fork w unicie (Linuxie) tworzy nowy proces, realizujacy ten sam program co proces-rodzic
TAK
NIE

X01
Funkcja systemowa fork w unicie (Linuxie) tworzy nowy watek, realizujacy funkcje podana w argumencie
TAK
NIE

X01
Funkcja systemowa fork w unicie (Linuxie) tworzy nowy proces, realizujacy program podany w argumencie do tej funkcji
TAK
NIE

X10
Funkcja systemowa execve w unixie (Linuxie) laduje nowy program w miejsce obrazu pamieci procesu, ktory wywolal te funkcje
TAK
NIE

X01
Funkcja systemowa execve w unixie (Linuxie) tworzy nowy proces, realizujacy program podany w argumencie do tej funkcji
TAK
NIE

X01
Funkcja systemowa execve w unixie (Linuxie) tworzy nowy watek, realizujacy funkcje podana w argumencie
TAK
NIE

X01
Kanal komunikacyjny z zerowym buforowaniem umozliwia buforowanie operacji dyskowych
TAK
NIE

X10
Kanal komunikacyjny z zerowym buforowaniem to kanal, w ktorym aktualnie nie ma zadnych komunikatow
TAK
NIE

X01
Kanal komunikacyjny z zerowym buforowaniem moze powodowac uspienie procesu czytajacego z kanalu
TAK
NIE

X01
Kontekst procesu jest to obraz pamieci, rejestrow i zmiennych systemowych procesu w pewnej chwili
TAK
NIE

X01
Kontekst procesu obejmuje informacje konieczne do zablokowania procesu
TAK
NIE

X10
Kontekst procesu opisuje stan wszystkich zasobow, z ktorych moze proces korzystac
TAK
NIE

X01
Kanal komunikacyjny z nieograniczonym buforowaniem moze powodowac uspienie procesu piszacego do kanalu
TAK
NIE

X01
Kanal komunikacyjny z nieograniczonym buforowaniem moze powodowac uspienie procesu czytajacego z kanalu
TAK
NIE

X10
Kanal komunikacyjny z nieograniczonym buforowaniem umozliwia buforowanie operacji dyskowych
TAK
NIE

X10
Ogole semafory dijkstry przyjmuja tylko wartosci 0 lub 1
TAK
NIE

X01
Ogole semafory dijkstry moga blokowac proces przy wykonaniu operacji V
TAK
NIE

X10
Ogole semafory dijkstry moga blokowac proces przy wykonywaniu operacji p
TAK
NIE

X01
Ochrona pamieci w systemach operacyjnych okresla prawa dostepu procesow do pamieci dyskowej
TAK
NIE

X01
Ochrona pamieci w systemach operacyjnych zapewnia, ze procesy nie zostana zmodyfikowane w trakcie kopiowania do obszaru wymiany (swapping)
TAK
NIE

X10
Ochrona pamieci w systemach operacyjnych uniemozliwia dostep procesu do niezaalokowanej pamieci
TAK
NIE

X01
Przetwarzanie posrednie to technika przydzielania dodatkowych buforow procesom uprzywilejowanym
TAK
NIE

X01
Przetwarzanie posrednie eliminuje fragmentacje zewnetrzna dysku przez przesuwanie plikow w tle
TAK
NIE

X10
Przetwarzanie posrednie polega na kopiowaniu danych miedzy dyskiem a wolnymi urzadzeniami zewnetrznymi w celu poprawy wykorzystania procesora
TAK
NIE

X01
Przetwarzanie potokowe dostepne jest tylko w systemach wieloprocesorowych
TAK
NIE

X01
Przetwarzanie potokowe w powloce sh mozna je wywolac wypisujac dwie komendy w nawiasach okraglych rozdzielone przecinkami
TAK
NIE

X10
Przetwarzanie potokowe realizowane jest przez przekierowanie standardowego wyjscia komendy pierwszej do standardowego wejscia komendy drugiej
TAK
NIE

X01
Przydzial indeksowy miejsca na dysku charakteryzuje sie fragmentacja zewnetrzna przestrzeni dysku
TAK
NIE

X10
Przydzial indeksowy miejsca na dysku wymaga zapisu tablicy indeksowej na dysku
TAK
NIE

X01
Przydzial indeksowy miejsca na dysku opisuje polozenie pliku jako ciag segmentow roznej wielkosci
TAK
NIE

X10
Proces moze przejsc do stanu zablokowania bezposrednio ze stanu aktywnosci
TAK
NIE

X01
Proces moze przejsc do stanu zablokowania w wyniku wykonania funkcji exit (w linuxie)
TAK
NIE

X01
Proces moze przejsc do stanu zablokowania po wyczerpaniu kwantu czasu aktywnosci
TAK
NIE

X01
Proces uspiony (zablokowany) zawsze usuwany jest z pamieci operacyjnej (kopiowany do obszaru wymiany)
TAK
NIE

X10
Proces uspiony (zablokowany) oczekuje az inny proces go zbudzi
TAK
NIE

X01
Proces uspiony (zablokowany) oczekuje na zwolnienie procesora przez procesor aktywny
TAK
NIE

X01
Powloka systemu operacyjnego okresla zestaw dostepnych jezykow programowania
TAK
NIE

X01
Powloka systemu operacyjnego okresla dostepny zestaw komend wewnetrznych
TAK
NIE

X01
Powloka systemu operacyjnego pozwala definiowac zmienne srodowiskowe, przekazywane do uruchamianych programow
TAK
NIE

X01
Pozycje katalogowe w systemie FAT pozwalaja definiowac nazwy plikow dowolnej wielkosci
TAK
NIE

X10
Pozycje katalogowe w systemie FAT zawieraja informacje o polozeniu pliku na dysku
TAK
NIE

X01
Pozycje katalogowe w systemie FAT zawieraja sume kontrolna pliku
TAK
NIE

X01
Przydzial ciagly miejsca na dysku wymaga zapisu tablicy indeksowanej na dysku
TAK
NIE

X01
Przydzial ciagly miejsca na dysku jest algorytmem optymalnym, nie dajacym sie zaimplementowac w praktyce
TAK
NIE

X10
Przydzial ciagly miejsca na dysku charakteryzuje sie fragmentacja zewnetrzna przestrzeni dysku
TAK
NIE

X01
Planowanie zadan (scheduling) ma na celu synchronizowanie dostepu do zasobow
TAK
NIE

X10
Planowanie zadan (scheduling) ma na celu wybor procesu do aktywacji
TAK
NIE

X01
Planowanie zadan (scheduling) ma na celu unikanie blokad
TAK
NIE

X10
Planowanie srednioterminowe okresla kolejnosc kopiowania procesow do pamieci z obszaru wymiany
TAK
NIE

X10
Planowanie srednioterminowe wybiera proces do uruchomienia sposrod procesow gotowych
TAK
NIE

X01
Planowanie srednioterminowe okresla procesy, ktore nalezy odblokowac
TAK
NIE

X01
Sekcja krytyczna to technika synchronizacji dostepu do pamieci wspoldzielonej przez procesor
TAK
NIE

X01
Sekcja krytyczna wykorzystywana jest do negocjacji dostepu do semaforow
TAK
NIE

X10
Sekcja krytyczna wykorzystywana jest od ochrony danych przed rownoczesna ich modyfikacja przez procesy wspolbiezne
TAK
NIE

X01
Sygnaly w systemie linux generowane sa wylacznie przez sterowniki urzadzen zewnetrznych
TAK
NIE

X01
Sygnaly w systemie linux nie moga byc ignorowane przez procesy
TAK
NIE

X10
Sygnaly w systemie linux wysylane sa do pojedynczych procesow, grup procesow, procesow okreslonego uzytkownika lub do wszystkich procesow
TAK
NIE

X01
Swobodny (zrandomizowany), dostep do pliku polega na wspoldzieleniu otwartych plikow przez wiele procesow
TAK
NIE

X01
Swobodny (zrandomizowany), dostep do pliku szereguje dostep wielu procesow do pliku
TAK
NIE

X10
Swobodny (zrandomizowany), dostep do pliku pozwala na wystepowanie plikow nieciaglych, z niezaalokowanymi dziurami
TAK
NIE

X01
Stan procesu przechowywany jest w jadrze systemu operacyjnego w obszarze uarea
TAK
NIE

X01
Stan procesu Identyfikuje procesy, ktore nie wymagaja dostepu do urzadzen zewnetrznych
TAK
NIE

X10
Stan procesu okresla, czy procesor jest przydzielony do procesu
TAK
NIE

X10
Stronicowanie na zadanie wymaga tworzenia obrazu pamieci w obszarze wymiany
TAK
NIE

X01
Stronicowanie na zadanie wykorzystuje segmentacje pamieci
TAK
NIE

X01
Stronicowanie na zadanie wlaczane jest na zadanie procesu (przez wywolanie funkcji swapon)
TAK
NIE

X10
Sciezka do pliku to sciezka bezwzgledna okreslajaca polozenie pliku wzgledem katalogu glownego
TAK
NIE

X01
Sciezka do pliku moze byc wzgledna, bezwzgledna lub symboliczna
TAK
NIE

X01
Sciezka do pliku to sciezka symboliczna okreslajaca polozenie pliku wzgledem katalogu domowego uzytkownika
TAK
NIE

X01
Warunek postepu w synchronizacji miedzy procesami to zapewnienie, ze dwa procesy nie znajda sie w tym samym czasie w sekcji krytycznej
TAK
NIE

X10
Warunek postepu w synchronizacji miedzy procesami to wymaganie, aby proces nie byl usypiany przy wejsciu do sekcji krytycznej, gdy nie ma w niej innych procesow
TAK
NIE

X01
Warunek postepu w synchronizacji miedzy procesami zapewnia, ze proces nie jest wywlaszczany, gdy znajduje sie w sekcji krytycznej
TAK
NIE

X01
Warunek wykluczania w synchronizacji miedzy procesami zapewnia, ze proces nie jest wywlaszczany, gdy znajduje sie w sekcji krytycznej
TAK
NIE

X10
Warunek wykluczania w synchronizacji miedzy procesami to zapewnienie, ze dwa procesy nie znajda sie w tym samym czasie w sekcji krytycznej
TAK
NIE

X01
Warunek wykluczania w synchronizacji miedzy procesami wymaga, aby proces mial dostep do sekcji krytycznej, gdy nie przebywa w niej inny
TAK
NIE